Index: src/app/app.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/app.component.ts	(revision 937dfb3bda0bf79fc71d25dc3fbcd85954f2cceb)
+++ src/app/app.component.ts	(revision b3e6a6999d0514ea9a3d4264c293c5c13059c78d)
@@ -1,4 +1,4 @@
-import { Component } from "@angular/core";
+import { ChangeDetectorRef, Component } from '@angular/core';
 import { Car } from "./common/models/car";
 import { GetCarsService } from "./common/service/get-cars.service";
 import { MatDialog } from "@angular/material/dialog";
@@ -15,7 +15,10 @@
   model: string;
   problem: string;
 
-  constructor(private httpService: GetCarsService, private dialog: MatDialog) {}
+  constructor(
+    private httpService: GetCarsService,
+    private dialog: MatDialog
+  ) {}
 
   ngOnInit() {
     this.httpService.getData().subscribe();
@@ -29,6 +32,7 @@
     });
 
     dialogRef.afterClosed().subscribe((result: Car) => {
+      this.httpService.addCar(result);
       console.log("The dialog was closed");
       const isEverythingIsFilled = Object.values(result).every(Boolean);
       if (result && isEverythingIsFilled) {
Index: src/app/common/service/get-cars.service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/common/service/get-cars.service.ts	(revision 937dfb3bda0bf79fc71d25dc3fbcd85954f2cceb)
+++ src/app/common/service/get-cars.service.ts	(revision b3e6a6999d0514ea9a3d4264c293c5c13059c78d)
@@ -2,18 +2,21 @@
 import { HttpClient } from "@angular/common/http";
 import { Car } from "../models/car";
 import { tap } from "rxjs/operators";
-import { Observable } from "rxjs";
+import { BehaviorSubject, Observable } from 'rxjs';
 
 @Injectable({ providedIn: "root" })
 export class GetCarsService {
+  public cars$ = new BehaviorSubject<Car[]>([]);
   public cars: Car[];
   public carsCompleted: Car[];
+
   constructor(private http: HttpClient) {}
 
   public getData(): Observable<{ carList: Car[] }> {
     return this.http.get<{ carList: Car[] }>("assets/cars.json").pipe(
       tap((res: { carList: Car[] }) => {
         this.cars = res.carList;
+        this.cars$.next(this.cars);
         console.log(this.cars);
       })
     );
@@ -30,4 +33,17 @@
       })
     );
   }
+
+  public deleteCar(id: number) {
+
+  }
+
+  public addCar(car: Car) {
+    this.cars.push(car);
+    this.cars$.next(this.cars);
+  }
+
+  public update(car: Car) {
+
+  }
 }
Index: src/app/components/cars-active/cars-active.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/components/cars-active/cars-active.component.html	(revision 937dfb3bda0bf79fc71d25dc3fbcd85954f2cceb)
+++ src/app/components/cars-active/cars-active.component.html	(revision b3e6a6999d0514ea9a3d4264c293c5c13059c78d)
@@ -1,6 +1,6 @@
 <div class="content-wrap">
     <h1>Список машин, записанных на ТО</h1>
-  <table mat-table [dataSource]="cars" class=" table mat-elevation-z8">
+  <table mat-table [dataSource]="cars$" class=" table mat-elevation-z8">
           <ng-container matColumnDef="position">
             <th mat-header-cell *matHeaderCellDef></th>
             <td mat-cell *matCellDef="let element"> {{element.position}} </td>
Index: src/app/components/cars-active/cars-active.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/components/cars-active/cars-active.component.ts	(revision 937dfb3bda0bf79fc71d25dc3fbcd85954f2cceb)
+++ src/app/components/cars-active/cars-active.component.ts	(revision b3e6a6999d0514ea9a3d4264c293c5c13059c78d)
@@ -1,6 +1,7 @@
 import { Component, OnInit } from "@angular/core";
 import { Car } from "src/app/common/models/car";
 import { GetCarsService } from "src/app/common/service/get-cars.service";
+import { BehaviorSubject, Observable } from 'rxjs';
 
 @Component({
   selector: "app-cars-active",
@@ -8,7 +9,7 @@
   styleUrls: ["./cars-active.component.scss"],
 })
 export class CarsActiveComponent implements OnInit {
-  cars: Car[] = [];
+  public cars$: Observable<Car[]>;
 
   displayedColumns: string[] = [
     "position",
@@ -19,22 +20,22 @@
   ];
 
   constructor(private httpService: GetCarsService) {
-    this.cars = httpService.cars;
+    this.cars$ = httpService.cars$.asObservable();
   }
 
   setCars(cars: Car[]) {
-    this.cars = cars;
+    // this.cars = cars;
   }
 
   ngOnInit() {}
 
   carCompleted(position: number) {
-    const carCompleted = this.cars.find((item) => item.position == position);
-    const resultCars: Car[] = this.cars.filter((item) => {
-      return item.position != position;
-    });
-    this.httpService.carsCompleted.push(carCompleted);
-    this.httpService.setCarsService(resultCars);
-    return this.setCars(resultCars);
+    // const carCompleted = this.cars.find((item) => item.position == position);
+    // const resultCars: Car[] = this.cars.filter((item) => {
+    //   return item.position != position;
+    // });
+    // this.httpService.carsCompleted.push(carCompleted);
+    // this.httpService.setCarsService(resultCars);
+    // return this.setCars(resultCars);
   }
 }
